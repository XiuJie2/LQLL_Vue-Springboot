services:
  backend-1:
    build:
      context: ./springboot
      dockerfile: Dockerfile
    ports:
      - "9091:9090"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/Front-Back_Project?useSSL=false&charset=utf8mb4
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=mysql123
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3


  backend-2:
    build:
      context: ./springboot
      dockerfile: Dockerfile
    ports:
      - "9092:9090"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/Front-Back_Project?useSSL=false&charset=utf8mb4
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=mysql123
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9090/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3

  frontend:
    build: ./vue
    environment:
      - VITE_API_BASE_URL=/api  # 或統一用 nginx 代理
    depends_on:
      backend-1:
        condition: service_healthy
      backend-2:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80" ]
      interval: 30s
      timeout: 5s
      retries: 3


  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: Front-Back_Project
      MYSQL_ROOT_PASSWORD: mysql123
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3307:3306"  # 避免與本地 MySQL 衝突
    networks:
      - app-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./vue/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./vue/dist:/usr/share/nginx/html:ro
    depends_on:
      - frontend
      - backend-1
      - backend-2
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge